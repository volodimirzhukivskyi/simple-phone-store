{"version":3,"sources":["components/Counter/Counter.js","components/FavShopCards/FavShopCards.js","modules/FavShopList/FavShopList.js","components/FormShop/FormShop.js"],"names":["Counter","props","onClickPlus","onClickMinus","counter","className","onClick","FavShopCards","card","onClickDelete","onClickAddToCart","mapActions","splitValue","dispatch","useDispatch","style","borderBottom","src","process","alt","name","price","count","vendorCode","Button","backgroundColor","text","background","addShopForm","FavShopList","cards","useSelector","store","reducerApp","shoppingCart","favProductsIds","actionToConfirm","shopModal","reducerModal","shopForm","changedCardItemCount","increment","shopItems","map","item","validateForm","filter","changedCountItem","length","code","reduce","accumulator","currentValue","FormShop","click","Modal","header","closeButton","addShopModal","actions","validationSchema","yup","shape","matches","min","max","required","secondName","age","typeError","address","phoneNumber","initialValues","validateOnBlur","onSubmit","values","console","log","clearItem","resetForm","errors","touched","handleChange","isValid","handleSubmit","handleBlur","handleReset","dirty","e","stopPropagation","action","type","placeholder","onChange","onBlur","value","disabled"],"mappings":"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","file":"static/js/4.eec3a4eb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\nconst Counter=(props)=>{\r\n    const{onClickPlus,onClickMinus,counter}=props\r\nreturn <div className=\"counterWrapper\">\r\n    <button onClick={onClickPlus}>+</button>\r\n    <p>{counter}</p>\r\n    <button onClick={onClickMinus}>-</button>\r\n</div>\r\n}\r\nexport default Counter","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { addShopForm } from \"../../modules/ReduxApp/ModalReducer/modalAction\";\nimport Counter from \"../Counter/Counter\";\n\nconst FavShopCards = (props) => {\n  const {\n    card,\n    onClickMinus,\n    onClickPlus,\n    onClickDelete,\n    onClickAddToCart,\n    mapActions,\n    splitValue,\n  } = props;\n\n  const dispatch = useDispatch();\n  return (\n    <div\n      className=\"favCardsBlock\"\n      style={{ borderBottom: \"1px solid #cccccc\" }}\n    >\n      <img src={process.env.PUBLIC_URL+card.src} alt=\"Смартфон\" />\n      <div className=\"contentTextWrapper\">\n        <p className=\"cardsWrapper__title\">\n          Модель : <br />\n          {card.name}\n        </p>\n        <span className=\"cardsWrapper__price\">\n          Цена :{\" \"}\n          {onClickDelete\n            ? splitValue(card.price * card.count)\n            : splitValue(card.price)}\n          ₴\n        </span>\n      </div>\n      {onClickDelete && (\n        <Counter\n          onClickPlus={() => onClickPlus(card.vendorCode)}\n          onClickMinus={() => onClickMinus(card.vendorCode)}\n          counter={card.count}\n        />\n      )}\n      <div className=\"buttonWrapper\">\n        <Button\n          className=\"CloseButtonModal\"\n          backgroundColor={\"none\"}\n          onClick={() => {\n            mapActions\n              ? mapActions(card.vendorCode)\n              : onClickDelete(card.vendorCode);\n          }}\n          text={\"X\"}\n        />\n        <Button\n          className={mapActions ? \"cardsWrapper__button\" : \"hide-block\"}\n          style={{ background: \"#cccccc\" }}\n          key={card.vendorCode}\n          onClick={() => {\n            mapActions\n              ? onClickAddToCart(card.vendorCode)\n              : dispatch(addShopForm(true));\n          }}\n          text={\"В корзину\"}\n        />\n      </div>\n    </div>\n  );\n};\nexport default FavShopCards;\n","import React from \"react\";\nimport FavShopCards from \"../../components/FavShopCards/FavShopCards\";\nimport { changedCountItem } from \"../ReduxApp/AppReducer/actionsApp\";\nimport {\n  addShopForm,\n  addShopModal,\n} from \"../ReduxApp/ModalReducer/modalAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"../../components/Modal/Modal\";\nimport Button from \"../../components/Button/Button\";\nimport FormShop from \"../../components/FormShop/FormShop\";\n\nconst FavShopList = (props) => {\n  const {\n    cards,\n    onClickDelete,\n    onClickAddToCart,\n    mapActions,\n    splitValue,\n  } = props;\n  const { shoppingCart, shopModal, shopForm } = useSelector((store) => ({\n    cards: store.reducerApp.cards,\n    shoppingCart: store.reducerApp.shoppingCart,\n    favProductsIds: store.reducerApp.favProductsIds,\n    actionToConfirm: store.reducerApp.actionToConfirm,\n    shopModal: store.reducerModal.shopModal,\n    shopForm: store.reducerModal.shopForm,\n  }));\n  const dispatch = useDispatch();\n  const changedCardItemCount = (vendorCode, increment = true) => {\n    const shopItems = shoppingCart.map((item) => {\n      if (item.vendorCode === vendorCode) {\n        return {\n          vendorCode: vendorCode,\n          count: increment ? item.count + 1 : item.count - 1,\n        };\n      }\n      return item;\n    });\n    const validateForm = shopItems.filter((item) => item.count);\n    dispatch(changedCountItem(validateForm));\n  };\n\n  return (\n    <div className=\"favContentWrapper\">\n      <h1 className=\"titleHero\">{mapActions ? \"Избранное\" : \"Корзина\"}</h1>\n      <div className=\"favCardsWrapper\">\n        {cards && !cards.length && (\n          <div className=\"style-title\">\n            Пока в{mapActions ? \" Избранном\" : \" Корзине\"} нет товаров...\n          </div>\n        )}\n\n        {cards.map((card) => (\n          <FavShopCards\n            key={card.vendorCode}\n            card={card}\n            onClickMinus={(code) => changedCardItemCount(code, false)}\n            onClickAddToCart={onClickAddToCart}\n            onClickPlus={(code) => changedCardItemCount(code, true)}\n            mapActions={mapActions}\n            onClickDelete={onClickDelete}\n            splitValue={splitValue}\n          />\n        ))}\n        {!mapActions && (\n          <div className={\"total-price\"}>\n            <p className={\"total-price__text\"}>\n              К ОПЛАТЕ:\n              <span className={\"total-price__el\"}>\n                {cards.reduce(\n                  (accumulator, currentValue) =>\n                    accumulator + currentValue.count * +currentValue.price,\n                  0\n                )}\n              </span>\n            </p>\n\n            <Button\n              className={cards.length ? \"cardsWrapper__button\" : \"hide-block\"}\n              style={{ background: \"#cccccc\" }}\n              onClick={() => {\n                !mapActions && dispatch(addShopForm(true));\n              }}\n              text={\"Купить\"}\n            />\n          </div>\n        )}\n        {!mapActions && shopForm && (\n          <div className={\"containerModal\"}>\n            <FormShop\n              card={cards.map((card) => card)}\n              click={() => dispatch(addShopForm(false))}\n            />\n          </div>\n        )}\n        {shopModal && (\n          <Modal\n            header=\"Спасибо за сотрудничество!!! \"\n            closeButton={true}\n            click={() => dispatch(addShopModal(false))}\n            text=\"Ваш заказ принят на обробку.С вами свяжется менеджер\"\n            actions={\n              <div className=\"containerButton\">\n                <Button\n                  className=\"modalButtonOne\"\n                  backgroundColor={\"#b3382c\"}\n                  text={\"Закрыть\"}\n                  onClick={() => dispatch(addShopModal(false))}\n                />\n              </div>\n            }\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default FavShopList;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { clearItem } from \"../../modules/ReduxApp/AppReducer/actionsApp\";\nimport {\n  addShopForm,\n  addShopModal,\n} from \"../../modules/ReduxApp/ModalReducer/modalAction\";\nimport { useDispatch } from \"react-redux\";\nconst FormShop = (props) => {\n  const { click, card } = props;\n  const dispatch = useDispatch();\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .matches(/^[a-zA-Z]+$/, \"Это поле должно быть строкой\")\n      .min(2, \"Слишком короткое имя!\")\n      .max(50, \"Слишком длинное имя!\")\n      .required(\"Обязательно\"),\n    secondName: yup\n      .string()\n      .matches(/^[a-zA-Z]+$/, \"Это поле должно быть строкой\")\n      .min(2, \"Слишком короткая фамилия!\")\n      .max(50, \"Слишком длинная фамилия!\")\n      .required(\"Обязательно\"),\n    age: yup\n      .number()\n      .typeError(\"Этот текст не является числом\")\n      .required(\"Обязательно\"),\n    address: yup.string().required(\"Обязательно\"),\n    phoneNumber: yup\n      .number()\n      .min(10, \"Слишком короткий номер телефона !\")\n      .typeError(\"Этот текст не является номером\")\n      .required(\"Обязательно\"),\n  });\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          secondName: \"\",\n          age: \"\",\n          address: \"\",\n          phoneNumber: \"\",\n        }}\n        validateOnBlur\n        onSubmit={(values, actions) => {\n          console.log(values);\n          console.log(\n            ...card.map(\n              (card) =>\n                `Вы заказали - ${card.name} в количестве - ${card.count} штук` +\n                \"\\n\"\n            )\n          );\n          console.log(\"Информация о вас -\");\n          console.log(values);\n          dispatch(clearItem());\n          dispatch(addShopForm(false));\n          dispatch(addShopModal(true));\n          actions.resetForm({\n            values: {\n              name: \"\",\n              secondName: \"\",\n              age: \"\",\n              address: \"\",\n              phoneNumber: \"\",\n            },\n          });\n        }}\n        validationSchema={validationSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          isValid,\n          handleSubmit,\n          handleReset,\n          handleBlur,\n          dirty,\n        }) => (\n          // <div className=\"wrapperForm\" onClick={click}>\n          <div\n            className=\"register-form-container\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <form action=\"src/components/FormShop/FormShop\">\n              <h1 className=\"form-title\">Сделать заказ</h1>\n              <div className=\"form-fields\">\n                <div className=\"form-field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Имя\"\n                    name={\"name\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  />{\" \"}\n                  {touched.name && errors.name && (\n                    <p className=\"error\">{errors.name}</p>\n                  )}\n                </div>\n\n                <div className=\"form-field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Фамилия\"\n                    name={\"secondName\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.secondName}\n                  />\n                  {touched.secondName && errors.secondName && (\n                    <p className=\"error\">{errors.secondName}</p>\n                  )}\n                </div>\n                <div className=\"form-field\">\n                  <input\n                    type=\"number\"\n                    placeholder=\"Возраст пользователя\"\n                    name={\"age\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  {touched.age && errors.age && (\n                    <p className=\"error\">{errors.age}</p>\n                  )}\n                </div>\n                <div className=\"form-field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Адрес доставки\"\n                    name={\"address\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.address}\n                  />\n                  {touched.address && errors.address && (\n                    <p className=\"error\">{errors.address}</p>\n                  )}\n                </div>\n                <div className=\"form-field\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Мобильный телефон\"\n                    name={\"phoneNumber\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.phoneNumber}\n                  />\n                  {touched.phoneNumber && errors.phoneNumber && (\n                    <p className=\"error\">{errors.phoneNumber}</p>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-buttons\">\n                <button\n                  className=\"button\"\n                  disabled={!isValid && !dirty}\n                  onClick={handleSubmit}\n                  type=\"submit\"\n                >\n                  Отправить заявку\n                </button>\n                <div className=\"divider\"> </div>\n                {click && (\n                  <button onClick={click} type=\"button\" className=\"button \">\n                    Закрыть\n                  </button>\n                )}\n              </div>\n            </form>\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\nexport default FormShop;\n"],"sourceRoot":""}