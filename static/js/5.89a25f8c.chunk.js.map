{"version":3,"sources":["components/Slider/SliderGeneralList.js","modules/InformationProduct/InformationProduct.js","modules/GeneralList/GeneralList.js","components/FormShop/FormShop.js"],"names":["img","src","process","alt","Slider","useState","activeIndex","setActiveIndex","useEffect","interval","setInterval","current","length","clearInterval","prevIndexEl","nextImgEl","className","Button","backgroundColor","text","onClick","InformationProduct","showcaseSample","useSelector","store","cards","reducerApp","find","product","name","color","txt","price","activeNumber","setActiveNumber","activeColor","setActiveColor","handleChange","event","elIndex","Number","target","attributes","value","clickEl","number","imageElements","i","imageSrc","push","renderImages","onChange","map","FormShop","card","GeneralList","props","click","dispatch","useDispatch","validationSchema","yup","shape","matches","min","max","required","secondName","age","typeError","address","phoneNumber","initialValues","validateOnBlur","onSubmit","values","actions","console","log","count","clearItem","addShopForm","addShopModal","resetForm","errors","touched","isValid","handleSubmit","handleBlur","handleReset","dirty","e","stopPropagation","action","type","placeholder","onBlur","disabled"],"mappings":"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","file":"static/js/5.89a25f8c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Button from \"../Button/Button\";\n\nconst img = [\n  <img\n    key={1}\n    src={`${process.env.PUBLIC_URL}/img/sliderImg/informationBanner.png`}\n    alt=\"картинки магазина \"\n  />,\n  <img\n    key={2}\n    src={`${process.env.PUBLIC_URL}/img/sliderImg/youngWoman.jpg`}\n    alt=\"картинки магазина \"\n  />,\n  <img\n    key={3}\n    src={`${process.env.PUBLIC_URL}/img/sliderImg/Shop.jpg`}\n    alt=\"картинки магазина \"\n  />,\n];\n\nconst Slider = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveIndex((current) => {\n        return current === img.length - 1 ? 0 : current + 1;\n      });\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const prevIndexEl = activeIndex ? activeIndex - 1 : img.length - 1;\n  const nextImgEl = activeIndex === img.length - 1 ? 0 : activeIndex + 1;\n\n  return (\n    <div className=\"slider\">\n      <Button\n        className=\"buttonSliderPrev\"\n        backgroundColor={\"black\"}\n        text={\"<\"}\n        onClick={() => {\n          setActiveIndex(prevIndexEl);\n        }}\n      />\n      <div className=\"slider-img slider-img-prev\" key={prevIndexEl}>\n        {img[prevIndexEl]}\n      </div>\n      <div className=\"slider-img\" key={activeIndex}>\n        {img[activeIndex]}\n      </div>\n      <div className=\"slider-img slider-img-next\" key={nextImgEl}>\n        {img[nextImgEl]}\n      </div>\n      <Button\n        className=\"buttonSliderNext\"\n        backgroundColor={\"black\"}\n        text={\">\"}\n        onClick={() => {\n          setActiveIndex(nextImgEl);\n        }}\n      />\n    </div>\n  );\n};\nexport default Slider;\n","import React, { useState } from \"react\";\nimport FormShop from \"../../components/FormShop/FormShop\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../../components/Button/Button\";\nconst CURRENT_PRODUCT = \"iPhone 12\";\nconst InformationProduct = () => {\n  const { cards } = useSelector((store) => ({\n    cards: store.reducerApp.cards,\n  }));\n  const showcaseSample = cards.find(\n    (product) => product.name === CURRENT_PRODUCT,\n  );\n\n  const { color, txt, img, price, name } = showcaseSample;\n  const [activeNumber, setActiveNumber] = useState(0);\n  const [activeColor, setActiveColor] = useState(null);\n  const handleChange = (event) => {\n    const elIndex = Number(event.target.attributes.value.value);\n    setActiveNumber({ clickEl: img[elIndex] });\n  };\n\n  const renderImages = (number) => {\n    const imageElements = [];\n    for (let i = 0; i < number; i++) {\n      const imageSrc = img[i];\n      imageElements.push(\n        <img\n          className=\"pic-products\"\n          value={i}\n          key={i}\n          src={process.env.PUBLIC_URL + imageSrc}\n          onClick={handleChange}\n          alt=\"телефон\"\n        />,\n      );\n    }\n    return imageElements;\n  };\n  return (\n    <div>\n      <h2 className={\"informationProduct-title\"}>\n        Специальное предложение - <span>{name}</span>\n      </h2>\n      <div className=\"block-products-card container\">\n        <div>\n          <div className=\"block-pic-slider\">\n            <div className=\"block-pic\">{renderImages(3)}</div>\n            <div className=\"block-active-pic\">\n              <img\n                className=\"active-pic\"\n                src={\n                  activeNumber.clickEl\n                    ? process.env.PUBLIC_URL + activeNumber.clickEl\n                    : process.env.PUBLIC_URL + img[activeNumber]\n                }\n                onChange={handleChange}\n                alt=\"телефон\"\n              />\n            </div>\n          </div>\n          <div className={\"podInformation__content\"}>\n            <div className=\"color-block-container\">\n              <p className={\"color-text\"}>\n                Цвет: <span>{activeColor}</span>\n              </p>\n              <div className={\"wrapperButtons\"}>\n                {color.map((color, i) => (\n                  <div\n                    key={color}\n                    className={\n                      activeColor === color\n                        ? \"wrapperButton active-button \"\n                        : \"wrapperButton\"\n                    }\n                  >\n                    <Button\n                      onClick={() => setActiveColor(color)}\n                      backgroundColor={color}\n                      className={\"colorDiv\"}\n                    ></Button>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"block-products-text\">\n              <h3 className=\"products-title\">Краткое описание товара</h3>\n              <p>{txt}</p>\n            </div>\n          </div>\n        </div>\n        <div className={\"hero-block__form\"}>\n          <div className={\"price-information\"}>\n            <div className=\"block-price\">\n              <p className={\"price-number\"}>\n                <b className={\"price-text\"}>ЦЕНА : </b>\n                {price}\n              </p>\n            </div>\n          </div>\n          <FormShop card={showcaseSample} />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InformationProduct;\n","import \"../../App.scss\";\nimport Slider from \"../../components/Slider/SliderGeneralList\";\nimport InformationProduct from \"../InformationProduct/InformationProduct\";\n\nconst GeneralList = () => {\n  return (\n    <div>\n      <h1 className={\"titleHero\"}>\n        МЫ РАДЫ ПРИВЕТСТВОВАТЬ ВАС В НАШЕМ ИНТЕРНЕТ-МАГАЗИНЕ!\n      </h1>\n      <Slider />\n      <InformationProduct />\n    </div>\n  );\n};\nexport default GeneralList;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { clearItem } from \"../../modules/ReduxApp/AppReducer/actionsApp\";\nimport {\n  addShopForm,\n  addShopModal,\n} from \"../../modules/ReduxApp/ModalReducer/modalAction\";\nimport { useDispatch } from \"react-redux\";\nconst FormShop = (props) => {\n  const { click, card } = props;\n  const dispatch = useDispatch();\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .matches(/^[a-zA-Z]+$/, \"Это поле должно быть строкой\")\n      .min(2, \"Слишком короткое имя!\")\n      .max(50, \"Слишком длинное имя!\")\n      .required(\"Обязательно\"),\n    secondName: yup\n      .string()\n      .matches(/^[a-zA-Z]+$/, \"Это поле должно быть строкой\")\n      .min(2, \"Слишком короткая фамилия!\")\n      .max(50, \"Слишком длинная фамилия!\")\n      .required(\"Обязательно\"),\n    age: yup\n      .number()\n      .typeError(\"Этот текст не является числом\")\n      .required(\"Обязательно\"),\n    address: yup.string().required(\"Обязательно\"),\n    phoneNumber: yup\n      .number()\n      .min(10, \"Слишком короткий номер телефона !\")\n      .typeError(\"Этот текст не является номером\")\n      .required(\"Обязательно\"),\n  });\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          secondName: \"\",\n          age: \"\",\n          address: \"\",\n          phoneNumber: \"\",\n        }}\n        validateOnBlur\n        onSubmit={(values, actions) => {\n          console.log(values);\n          console.log(\n            ...card.map(\n              (card) =>\n                `Вы заказали - ${card.name} в количестве - ${card.count} штук` +\n                \"\\n\"\n            )\n          );\n          console.log(\"Информация о вас -\");\n          console.log(values);\n          dispatch(clearItem());\n          dispatch(addShopForm(false));\n          dispatch(addShopModal(true));\n          actions.resetForm({\n            values: {\n              name: \"\",\n              secondName: \"\",\n              age: \"\",\n              address: \"\",\n              phoneNumber: \"\",\n            },\n          });\n        }}\n        validationSchema={validationSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          isValid,\n          handleSubmit,\n          handleReset,\n          handleBlur,\n          dirty,\n        }) => (\n          // <div className=\"wrapperForm\" onClick={click}>\n          <div\n            className=\"register-form-container\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <form action=\"src/components/FormShop/FormShop\">\n              <h1 className=\"form-title\">Сделать заказ</h1>\n              <div className=\"form-fields\">\n                <div className=\"form-field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Имя\"\n                    name={\"name\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  />{\" \"}\n                  {touched.name && errors.name && (\n                    <p className=\"error\">{errors.name}</p>\n                  )}\n                </div>\n\n                <div className=\"form-field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Фамилия\"\n                    name={\"secondName\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.secondName}\n                  />\n                  {touched.secondName && errors.secondName && (\n                    <p className=\"error\">{errors.secondName}</p>\n                  )}\n                </div>\n                <div className=\"form-field\">\n                  <input\n                    type=\"number\"\n                    placeholder=\"Возраст пользователя\"\n                    name={\"age\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  {touched.age && errors.age && (\n                    <p className=\"error\">{errors.age}</p>\n                  )}\n                </div>\n                <div className=\"form-field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Адрес доставки\"\n                    name={\"address\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.address}\n                  />\n                  {touched.address && errors.address && (\n                    <p className=\"error\">{errors.address}</p>\n                  )}\n                </div>\n                <div className=\"form-field\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Мобильный телефон\"\n                    name={\"phoneNumber\"}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.phoneNumber}\n                  />\n                  {touched.phoneNumber && errors.phoneNumber && (\n                    <p className=\"error\">{errors.phoneNumber}</p>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-buttons\">\n                <button\n                  className=\"button\"\n                  disabled={!isValid && !dirty}\n                  onClick={handleSubmit}\n                  type=\"submit\"\n                >\n                  Отправить заявку\n                </button>\n                <div className=\"divider\"> </div>\n                {click && (\n                  <button onClick={click} type=\"button\" className=\"button \">\n                    Закрыть\n                  </button>\n                )}\n              </div>\n            </form>\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\nexport default FormShop;\n"],"sourceRoot":""}